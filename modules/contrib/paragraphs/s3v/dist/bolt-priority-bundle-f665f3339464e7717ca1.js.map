{"version":3,"sources":["webpack:///./node_modules/@bolt/components-nav-priority/nav-priority.js","webpack:///./node_modules/@bolt/core-v3.x/utils/optimized-resize.js"],"names":["BoltNavPriority","customElement","self","activeLink","useShadow","isReady","transitionEvent","whichTransitionEvent","_adaptPriorityNav","bind","_handleDropdownToggle","moreText","props","string","Promise","all","customElements","whenDefined","then","_","isOpen","offsettolerance","containerTabs","querySelector","primaryNav","primaryItems","querySelectorAll","insertAdjacentHTML","innerHTML","priorityDropdown","dropdownItems","dropdownLinks","forEach","navlink","setAttribute","allListItems","moreListItem","dropdownButton","_handleExternalClicks","_waitForDropdownToFinishAnimating","addEventListener","_onActivateLink","window","html","this","slot","classList","add","item","remove","stopWidth","offsetWidth","hiddenItems","primaryWidth","hideTheRest","i","push","length","includes","removeAttribute","document","e","el","target","parentNode","close","event","preventDefault","_toggleDropdown","open","waitForTransitionEnd","_afterDropdownHasFinishedAnimating","element","removeEventListener","hasAttribute","value","Boolean","dispatchEvent","CustomEvent","detail","bubbles","withLitHtml","type","name","obj","running","requestAnimationFrame","addThrottledEvent","debounce"],"mappings":"isFAiBMA,E,yrMADLC,wBAAc,uB,uRAEb,WAAYC,GAAM,e,4FAAA,SACZ,gBAASA,GAAT,SAAJA,EAAI,GACCC,YAAa,EAClBD,EAAKE,WAAY,EACjBF,EAAKG,SAAU,EACfH,EAAKI,gBAAkBC,cAEvBL,EAAKM,kBAAoBN,EAAKM,kBAAkBC,KAAKP,GACrDA,EAAKQ,sBAAwBR,EAAKQ,sBAAsBD,KAAKP,GAR7C,E,2EAWH,CACbS,SAAUC,IAAMC,U,sCAGlB,WAAa,WACXC,QAAQC,IAAI,CAACC,eAAeC,YAAY,kBAAkBC,MAAK,SAAAC,GAC7D,EAAKC,QAAS,EACd,EAAKC,gBAAkB,EAEvB,EAAKC,cAAgB,EAAKC,cAAc,wBACxC,EAAKC,WAAa,EAAKD,cAAc,iCACrC,EAAKE,aAAe,EAAKC,iBACvB,yGAGF,EAAKF,WAAWG,mBACd,YADF,sTAMU,EAAKhB,SAAW,EAAKA,SAAW,OAN1C,8VAcU,EAAKa,WAAWI,UAd1B,iEAsBA,EAAKvB,SAAU,EAEf,EAAKwB,iBAAmB,EAAKN,cAC3B,kCAEF,EAAKO,cAAgB,EAAKD,iBAAiBH,iBAAiB,MAC5D,EAAKK,cAAgB,EAAKF,iBAAiBH,iBACzC,gBAGF,EAAKK,cAAcC,SAAQ,SAAAC,GACzBA,EAAQC,aAAa,mBAAoB,OAG3C,EAAKC,aAAe,EAAKT,iBAAiB,MAC1C,EAAKU,aAAe,EAAKZ,WAAWD,cAClC,mCAEF,EAAKc,eAAiB,EAAKD,aAAab,cACtC,qCAGF,EAAKf,oBACL,EAAK8B,wBAEL,EAAKC,kCAAoC,EAAKA,kCAAkC9B,KAC9E,GAEF,EAAK4B,eAAeG,iBAAiB,QAAS,EAAK9B,uBACnD,EAAK8B,iBAAiB,gBAAiB,EAAKC,iBAC5CC,OAAOF,iBAAiB,kBAAmB,EAAKhC,wB,kCAIpD,WACE,OAAOmC,eAAP,IACIC,KAAKC,KAAK,c,6CAIhB,WAAoB,WAClBD,KAAKE,UAAUC,IAAI,eAGnBH,KAAKT,aAAaH,SAAQ,SAAAgB,GACxBA,EAAKF,UAAUG,OAAO,gBAIxB,IAAIC,EAAYN,KAAKP,eAAec,YAChCC,EAAc,GACZC,EAAeT,KAAKpB,WAAW2B,YAEjCG,GAAc,EAClBV,KAAKnB,aAAaO,SAAQ,SAACgB,EAAMO,GAG7BF,EAAe,EAAKhC,iBAAmB6B,EAAYF,EAAKG,cACxC,IAAhBG,EAEAJ,GAAaF,EAAKG,aAElBG,GAAc,EACdN,EAAKF,UAAUC,IAAI,aACnBK,EAAYI,KAAKD,OAKhBH,EAAYK,OAQfb,KAAKd,cAAcE,SAAQ,SAACgB,EAAMO,GAC3BH,EAAYM,SAASH,IACxBP,EAAKF,UAAUC,IAAI,iBATvBH,KAAKxB,QAAS,EACdwB,KAAKe,gBAAgB,QACrBf,KAAKR,aAAaU,UAAUC,IAAI,aAChCH,KAAKtB,cAAcwB,UAAUG,OAAO,sCACpCL,KAAKP,eAAeS,UAAUG,OAAO,aACrCL,KAAKP,eAAeH,aAAa,iBAAiB,IASpDU,KAAKE,UAAUG,OAAO,iB,iDAGxB,WAAwB,WACtBW,SAASpB,iBAAiB,SAAS,SAAAqB,GAEjC,IADA,IAAIC,EAAKD,EAAEE,OACJD,GAAI,CACT,GAAIA,IAAO,EAAKjC,kBAAoBiC,IAAO,EAAKzB,eAC9C,OAEFyB,EAAKA,EAAGE,WAGV,EAAKC,a,2CAKT,SAAgBC,GACdtB,KAAKqB,U,iDAGP,SAAsBJ,GACpBA,EAAEM,iBACFvB,KAAKxB,QAAUwB,KAAKxB,OACpBwB,KAAKwB,oB,2CAGP,WACMxB,KAAKxB,OACPwB,KAAKyB,OAELzB,KAAKqB,U,gCAIT,WACErB,KAAKxB,QAAS,EACdwB,KAAKV,aAAa,QAAQ,GAC1BU,KAAKtB,cAAcwB,UAAUC,IAAI,sCACjCH,KAAKE,UAAUC,IAAI,cACnBH,KAAKP,eAAeS,UAAUC,IAAI,aAClCH,KAAKP,eAAeH,aAAa,iBAAiB,GAElDU,KAAKf,iBAAiBW,iBACpBI,KAAKtC,gBACLsC,KAAKL,mCACL,K,6DAKJ,SAAkC2B,GAChCI,YACE1B,KACAA,KAAKf,iBACLe,KAAK2B,mCAHPD,CAIEJ,K,8DAIJ,SAAmChE,EAAMsE,EAASN,GAChDhE,EAAK4C,UAAUG,OAAO,cACtB/C,EAAK4C,UAAUG,OAAO,cAEtB/C,EAAK2B,iBAAiB4C,oBACpBvE,EAAKI,gBACLJ,EAAKqC,mCACL,K,iCAIJ,WACEK,KAAKxB,QAAS,EACdwB,KAAKe,gBAAgB,QACrBf,KAAKE,UAAUC,IAAI,cACnBH,KAAKtB,cAAcwB,UAAUG,OAAO,sCACpCL,KAAKP,eAAeS,UAAUG,OAAO,aACrCL,KAAKP,eAAeH,aAAa,iBAAiB,GAElDU,KAAKf,iBAAiBW,iBACpBI,KAAKtC,gBACLsC,KAAKL,qC,gCAIT,WACE,OAAOK,KAAK8B,aAAa,c,gCAG3B,SAAYC,IACVA,EAAQC,QAAQD,KAEd/B,KAAKV,aAAa,WAAY,IAC9BU,KAAKE,UAAUC,IAAI,YAEnBH,KAAKiC,cACH,IAAIC,YAAY,qBAAsB,CACpCC,OAAQ,CACN1E,SAAS,GAEX2E,SAAS,KAKTpC,KAAKtB,eACPsB,KAAKtB,cAAcwB,UAAUC,IAAI,cAGnCH,KAAKe,gBAAgB,YACrBf,KAAKE,UAAUG,OAAO,YAGlBL,KAAKtB,eACPsB,KAAKtB,cAAcwB,UAAUG,OAAO,e,yCAM1C,WACEL,KAAK6B,oBAAoB,gBAAiB7B,KAAKH,iBAC/CC,OAAO+B,oBAAoB,kBAAmB7B,KAAKpC,yBAhQzByE,M,iCCjB9B,IA4B6BC,EAAMC,EAAMC,EA5BzC,UAWE,SAA2BF,EAAMC,EAAMC,GACrCA,EAAMA,GAAO1C,OACb,IAAI2C,GAAU,EAYdD,EAAI5C,iBAAiB0C,GAVrB,WACMG,IAGJA,GAAU,EACVC,uBAAsB,WACpBF,EAAIP,cAAc,IAAIC,YAAYK,IAClCE,GAAU,SAiBhBE,CAAkB,SAAU,mBAXDL,EAYT,SAZeC,EAYL,mBAX1BC,EAAMA,GAAO1C,QAETF,iBACF0C,EACAM,aAAS,WACPJ,EAAIP,cAAc,IAAIC,YAAYK","file":"bolt-priority-bundle-f665f3339464e7717ca1.js","sourcesContent":["import { html, customElement } from '@bolt/element';\nimport {\n  props,\n  whichTransitionEvent,\n  waitForTransitionEnd,\n} from '@bolt/core-v3.x/utils';\nimport { withLitHtml } from '@bolt/core-v3.x/renderers/renderer-lit-html';\n\nimport '@bolt/core-v3.x/utils/optimized-resize';\n\n/*\n  Consider using these polyfills to broaden browser support:\n    — https://www.npmjs.com/package/classlist-polyfill\n    — https://www.npmjs.com/package/nodelist-foreach-polyfill\n*/\n\n@customElement('bolt-nav-priority')\nclass BoltNavPriority extends withLitHtml {\n  constructor(self) {\n    self = super(self);\n    self.activeLink = false;\n    self.useShadow = false;\n    self.isReady = false;\n    self.transitionEvent = whichTransitionEvent();\n\n    self._adaptPriorityNav = self._adaptPriorityNav.bind(self);\n    self._handleDropdownToggle = self._handleDropdownToggle.bind(self);\n  }\n\n  static props = {\n    moreText: props.string, // Text that displays when navlinks can't all display at once\n  };\n\n  connecting() {\n    Promise.all([customElements.whenDefined('bolt-navlink')]).then(_ => {\n      this.isOpen = false;\n      this.offsettolerance = 5; // Extra wiggle room when calculating how many items can fit\n\n      this.containerTabs = this.querySelector('.c-bolt-nav-priority');\n      this.primaryNav = this.querySelector('.c-bolt-nav-priority__primary');\n      this.primaryItems = this.querySelectorAll(\n        '.c-bolt-nav-priority__primary > .c-bolt-nav-priority__item:not(.c-bolt-nav-priority__item--show-more)',\n      );\n\n      this.primaryNav.insertAdjacentHTML(\n        'beforeend',\n        `\n        <li class=\"c-bolt-nav-priority__item c-bolt-nav-priority__show-more\">\n          <button type=\"button\" aria-haspopup=\"true\" aria-expanded=\"false\" class=\"c-bolt-nav-priority__button c-bolt-nav-priority__show-button\">\n            <span class=\"c-bolt-nav-priority__show-text\">\n              ${this.moreText ? this.moreText : 'More'}\n            </span>\n            <span class=\"c-bolt-nav-priority__show-icon\">\n              <bolt-icon name=\"chevron-down\"></bolt-icon>\n            </span>\n          </button>\n          <div class=\"c-bolt-nav-priority__dropdown\">\n            <ul class=\"c-bolt-nav-priority__list c-bolt-nav-priority__dropdown-list\">\n              ${this.primaryNav.innerHTML}\n            </ul>\n          </div>\n        </li>\n      `,\n      );\n\n      // trigger `isReady` setup work\n      this.isReady = true;\n\n      this.priorityDropdown = this.querySelector(\n        '.c-bolt-nav-priority__dropdown',\n      );\n      this.dropdownItems = this.priorityDropdown.querySelectorAll('li');\n      this.dropdownLinks = this.priorityDropdown.querySelectorAll(\n        'bolt-navlink',\n      );\n\n      this.dropdownLinks.forEach(navlink => {\n        navlink.setAttribute('is-dropdown-link', '');\n      });\n\n      this.allListItems = this.querySelectorAll('li');\n      this.moreListItem = this.primaryNav.querySelector(\n        '.c-bolt-nav-priority__show-more',\n      );\n      this.dropdownButton = this.moreListItem.querySelector(\n        '.c-bolt-nav-priority__show-button',\n      );\n\n      this._adaptPriorityNav();\n      this._handleExternalClicks();\n\n      this._waitForDropdownToFinishAnimating = this._waitForDropdownToFinishAnimating.bind(\n        this,\n      );\n      this.dropdownButton.addEventListener('click', this._handleDropdownToggle);\n      this.addEventListener('navlink:click', this._onActivateLink);\n      window.addEventListener('throttledResize', this._adaptPriorityNav);\n    });\n  }\n\n  render() {\n    return html`\n      ${this.slot('default')}\n    `;\n  }\n\n  _adaptPriorityNav() {\n    this.classList.add('is-resizing');\n\n    // reveal all items for the calculation\n    this.allListItems.forEach(item => {\n      item.classList.remove('is-hidden');\n    });\n\n    // hide items that won't fit in the Primary\n    let stopWidth = this.dropdownButton.offsetWidth;\n    let hiddenItems = [];\n    const primaryWidth = this.primaryNav.offsetWidth;\n\n    let hideTheRest = false; // keep track when the items in the nav stop fitting\n    this.primaryItems.forEach((item, i) => {\n      // make sure the items fit + we haven't already started to encounter items that don't\n      if (\n        primaryWidth + this.offsettolerance >= stopWidth + item.offsetWidth &&\n        hideTheRest !== true\n      ) {\n        stopWidth += item.offsetWidth;\n      } else {\n        hideTheRest = true;\n        item.classList.add('is-hidden');\n        hiddenItems.push(i);\n      }\n    });\n\n    // toggle the visibility of More button and items in Secondary\n    if (!hiddenItems.length) {\n      this.isOpen = false;\n      this.removeAttribute('open');\n      this.moreListItem.classList.add('is-hidden');\n      this.containerTabs.classList.remove('c-bolt-nav-priority--show-dropdown');\n      this.dropdownButton.classList.remove('is-active');\n      this.dropdownButton.setAttribute('aria-expanded', false);\n    } else {\n      this.dropdownItems.forEach((item, i) => {\n        if (!hiddenItems.includes(i)) {\n          item.classList.add('is-hidden');\n        }\n      });\n    }\n\n    this.classList.remove('is-resizing');\n  }\n\n  _handleExternalClicks() {\n    document.addEventListener('click', e => {\n      let el = e.target;\n      while (el) {\n        if (el === this.priorityDropdown || el === this.dropdownButton) {\n          return;\n        }\n        el = el.parentNode;\n      }\n\n      this.close();\n    });\n  }\n\n  // `_onActivateLink` handles the `navlink:active` event emitted by the children\n  _onActivateLink(event) {\n    this.close();\n  }\n\n  _handleDropdownToggle(e) {\n    e.preventDefault();\n    this.isOpen = !this.isOpen;\n    this._toggleDropdown();\n  }\n\n  _toggleDropdown() {\n    if (this.isOpen) {\n      this.open();\n    } else {\n      this.close();\n    }\n  }\n\n  open() {\n    this.isOpen = true;\n    this.setAttribute('open', true);\n    this.containerTabs.classList.add('c-bolt-nav-priority--show-dropdown');\n    this.classList.add('is-opening');\n    this.dropdownButton.classList.add('is-active');\n    this.dropdownButton.setAttribute('aria-expanded', true);\n\n    this.priorityDropdown.addEventListener(\n      this.transitionEvent,\n      this._waitForDropdownToFinishAnimating,\n      true,\n    );\n  }\n\n  // Wait for the longest transition to finish before cleaning up animation-specific classes\n  _waitForDropdownToFinishAnimating(event) {\n    waitForTransitionEnd(\n      this,\n      this.priorityDropdown,\n      this._afterDropdownHasFinishedAnimating,\n    )(event);\n  }\n\n  // Post-animation cleanup -- removes event listeners added, once they're no longer needed\n  _afterDropdownHasFinishedAnimating(self, element, event) {\n    self.classList.remove('is-opening');\n    self.classList.remove('is-closing');\n\n    self.priorityDropdown.removeEventListener(\n      self.transitionEvent,\n      self._waitForDropdownToFinishAnimating,\n      true,\n    );\n  }\n\n  close() {\n    this.isOpen = false;\n    this.removeAttribute('open');\n    this.classList.add('is-closing');\n    this.containerTabs.classList.remove('c-bolt-nav-priority--show-dropdown');\n    this.dropdownButton.classList.remove('is-active');\n    this.dropdownButton.setAttribute('aria-expanded', false);\n\n    this.priorityDropdown.addEventListener(\n      this.transitionEvent,\n      this._waitForDropdownToFinishAnimating,\n    );\n  }\n\n  get isReady() {\n    return this.hasAttribute('is-ready');\n  }\n\n  set isReady(value) {\n    value = Boolean(value);\n    if (value) {\n      this.setAttribute('is-ready', '');\n      this.classList.add('is-ready');\n\n      this.dispatchEvent(\n        new CustomEvent('nav-priority:ready', {\n          detail: {\n            isReady: true,\n          },\n          bubbles: true,\n        }),\n      );\n\n      // make sure containerTabs exists first\n      if (this.containerTabs) {\n        this.containerTabs.classList.add('is-ready');\n      }\n    } else {\n      this.removeAttribute('is-ready');\n      this.classList.remove('is-ready');\n\n      // make sure containerTabs exists first\n      if (this.containerTabs) {\n        this.containerTabs.classList.remove('is-ready');\n      }\n    }\n  }\n\n  // Clean up event listeners when being removed from the page\n  disconnecting() {\n    this.removeEventListener('navlink:click', this._onActivateLink);\n    window.removeEventListener('throttledResize', this._adaptPriorityNav);\n  }\n}\n\nexport { BoltNavPriority };\n","/**\n * This helper adds two custom resize events to the window:\n * 1. `throttledResize`: uses `requestAnimationFrame` to throttle the rate at which resize event fires\n * 2. `debouncedResize`: fires *after* user has stopped resizing (for at least 300ms)\n *\n * In most cases, `debouncedResize` will have a more drastic rate limiting effect. Whereas, `throttledResize` is a minor optimization.\n */\n\nimport { debounce } from './debounce';\n\n(function() {\n  function addThrottledEvent(type, name, obj) {\n    obj = obj || window;\n    let running = false;\n\n    function func() {\n      if (running) {\n        return;\n      }\n      running = true;\n      requestAnimationFrame(function() {\n        obj.dispatchEvent(new CustomEvent(name));\n        running = false;\n      });\n    }\n    obj.addEventListener(type, func);\n  }\n\n  function addDebouncedEvent(type, name, obj) {\n    obj = obj || window;\n\n    obj.addEventListener(\n      type,\n      debounce(function() {\n        obj.dispatchEvent(new CustomEvent(name));\n      }),\n    );\n  }\n\n  addThrottledEvent('resize', 'throttledResize');\n  addDebouncedEvent('resize', 'debouncedResize');\n})();\n"],"sourceRoot":""}